// <auto-generated />
using Labb_3API2._0.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Labb_3API2._0.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240429125208_First Seed")]
    partial class FirstSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Labb_3API2._0.Models.Interest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Interests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Konsten att fånga ögonblick.",
                            Title = "Fotografering"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Utmaningen att nå toppen.",
                            Title = "Bergsklättring"
                        },
                        new
                        {
                            Id = 3,
                            Description = "CRUD4LIFE.",
                            Title = "Programering"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Utmaningen att hoppa med hästt.",
                            Title = "Ridning"
                        });
                });

            modelBuilder.Entity("Labb_3API2._0.Models.Link", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PersonInterestId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonInterestId");

                    b.ToTable("Links");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PersonInterestId = 1,
                            Url = "http://example.com/foto"
                        },
                        new
                        {
                            Id = 2,
                            PersonInterestId = 2,
                            Url = "http://example.com/bergsbestigning"
                        },
                        new
                        {
                            Id = 3,
                            PersonInterestId = 3,
                            Url = "http://example.com/Microsoft"
                        },
                        new
                        {
                            Id = 4,
                            PersonInterestId = 4,
                            Url = "http://example.com/Ridsport"
                        });
                });

            modelBuilder.Entity("Labb_3API2._0.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Anna Svensson",
                            PhoneNumber = "0701234567"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Johan Karlsson",
                            PhoneNumber = "0722345678"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Christian Rapp",
                            PhoneNumber = "0722345678"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Fredrik Rapp",
                            PhoneNumber = "0721344677"
                        });
                });

            modelBuilder.Entity("Labb_3API2._0.Models.PersonInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("InterestId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InterestId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonInterests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InterestId = 1,
                            PersonId = 1
                        },
                        new
                        {
                            Id = 2,
                            InterestId = 2,
                            PersonId = 2
                        },
                        new
                        {
                            Id = 3,
                            InterestId = 3,
                            PersonId = 3
                        },
                        new
                        {
                            Id = 4,
                            InterestId = 4,
                            PersonId = 4
                        });
                });

            modelBuilder.Entity("Labb_3API2._0.Models.Link", b =>
                {
                    b.HasOne("Labb_3API2._0.Models.PersonInterest", "PersonInterest")
                        .WithMany("Links")
                        .HasForeignKey("PersonInterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonInterest");
                });

            modelBuilder.Entity("Labb_3API2._0.Models.PersonInterest", b =>
                {
                    b.HasOne("Labb_3API2._0.Models.Interest", "Interest")
                        .WithMany("PersonInterests")
                        .HasForeignKey("InterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labb_3API2._0.Models.Person", "Person")
                        .WithMany("PersonInterests")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interest");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Labb_3API2._0.Models.Interest", b =>
                {
                    b.Navigation("PersonInterests");
                });

            modelBuilder.Entity("Labb_3API2._0.Models.Person", b =>
                {
                    b.Navigation("PersonInterests");
                });

            modelBuilder.Entity("Labb_3API2._0.Models.PersonInterest", b =>
                {
                    b.Navigation("Links");
                });
#pragma warning restore 612, 618
        }
    }
}
